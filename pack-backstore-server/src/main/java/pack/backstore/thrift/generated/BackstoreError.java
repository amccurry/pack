/**
 * Autogenerated by Thrift Compiler (0.12.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package pack.backstore.thrift.generated;


@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.12.0)", date = "2019-12-13")
public enum BackstoreError implements org.apache.thrift.TEnum {
  UNKNOWN(0),
  FILE_DELETE_FAILED(1),
  FILE_NOT_FOUND(2),
  FILE_EXISTS(3),
  IO_ERROR(4),
  FILENAME_MISSING(5),
  LOCK_MISSING(6),
  LOCK_ALREADY_REGISTERED(7),
  LOCK_ALREADY_INVALID(8),
  LOCK_ID_MISSING(9);

  private final int value;

  private BackstoreError(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  @org.apache.thrift.annotation.Nullable
  public static BackstoreError findByValue(int value) { 
    switch (value) {
      case 0:
        return UNKNOWN;
      case 1:
        return FILE_DELETE_FAILED;
      case 2:
        return FILE_NOT_FOUND;
      case 3:
        return FILE_EXISTS;
      case 4:
        return IO_ERROR;
      case 5:
        return FILENAME_MISSING;
      case 6:
        return LOCK_MISSING;
      case 7:
        return LOCK_ALREADY_REGISTERED;
      case 8:
        return LOCK_ALREADY_INVALID;
      case 9:
        return LOCK_ID_MISSING;
      default:
        return null;
    }
  }
}
